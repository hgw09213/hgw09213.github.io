// 중간
https://www.w3schools.com/quiztest/quiztest.asp?qtest=JAVA 
https://www.w3schools.com/java/java_exercises.asp


// hw14
// Numbers
public class Numbers {
	int num[], i, j, t;

	Numbers(int num[]) {
		this.num = num;
	}

	double getTotal() {
		double sum = 0;
		for (int i = 0; i < num.length; i++)
			sum += num[i];
		return sum;
	}

	double getArithmaticMean() {
		return getTotal() / num.length;
	}

	double getGeometricMean() {
		double geometric = 1;
		for (i = 0; i < num.length; i++) {
			geometric *= num[i];
		}
		return Math.pow(geometric, 1. / num.length);
	}

	double getHarmonicMean() {
		return Math.pow(getGeometricMean(), 2) / getArithmaticMean();
	}

	double getMedian() {
		double a = Math.ceil(num.length / 2), b = Math.floor(num.length / 2);
		return (num[(int) a] + num[(int) b]) / 2;
	}

	void sorting() {
		for (i = 0; i < num.length; i++) {
			for (j = 0; j < 99 - i; j++) {
				if (num[j] > num[j + 1]) {
					t = num[j];
					num[j] = num[j + 1];
					num[j + 1] = t;
				}
			}
		}
	}

	void drawHistogram(int start, int end, int binCount) {
		for (i = 0; i < binCount; i++) {
			System.out.print(i * 10 + "~" + (i * 10 + 9) + " ");
			for (j = 0; j < end; j++) {
				if (num[j] / 10 == i) {
					System.out.printf("#");
				}
			}
			System.out.println("");
		}
	}

	void display() {
		System.out.printf("%3d :", num.length);
		for (int i = 0; i < num.length; i++)
			System.out.printf("%3d ", num[i]);
		System.out.println();
	}
}



// Main

public class Main {
	public static void main(String[] args) {
		int size = 100;
		int data[] = new int[size];
		for (int i = 0; i < size; i++)
			data[i] = (int) (Math.random() * 100);
		Numbers obj = new Numbers(data);
		obj.sorting();
		obj.display();
		System.out.println("");
		System.out.printf("Arithmetic Mean : %5.2f\n", obj.getArithmaticMean());
		System.out.printf("Geometric Mean : %5.2f\n", obj.getGeometricMean());
		System.out.printf("Harmonic Mean : %5.2f\n", obj.getHarmonicMean());
		System.out.printf("Median Mean : %5.2f\n", obj.getMedian());
		System.out.println("");
		obj.drawHistogram(0, 100, 10);
	}
}
