byte : 1바이트 크기의 정수형 자료형

new : 객체를 생성하는 연산자

static : 클래스에 속하는 멤버를 정의하는 키워드. 객체 없이 클래스명으로 접근 가능.

class : 객체를 생성하기 위한 클래스를 정의하는 키워드. 이름의 첫 글자는 대문자로 작성

constructor : 생성자. 클래스 이름과 동일한 이름의 메서드. 객체가 생성될 때 자동으로 호출되어 멤버 변수를 초기화.

this : 현재 객체 자기 자신을 가리키며 클래스의 멤버 변수와 메서드의 매개변수를 구분하기 위해 사용

extends : 상속. 부모 클래스의 멤버(변수, 메서드)를 상속받는 자식 클래스를 정의하는 키워드.

super : 부모 클래스를 참조하는 키워드. 부모 클래스의 생성자나 멤버(변수, 메서드)를 호출할 때 사용

overriding : 부모 클래스의 메서드를 자식 클래스에서 재정의 하는 것.

Polymorphism : 다형성. 부모 타입으로 자식 객체를 참조할 수 있는 성질

abstract : 미완성 클래스나 메서드를 정의하는 키워드, instance 불가

abstract method : 선언만 있고 구현이 없는 메서드

abstract class : abstract 메서드를 포함할 수 있는 클래스. 객체 생성 불가, 자식 클래스에서 구현해야 함.

interface : 클래스와 동일한 레벨에 선언되는 추상 메서드들의 집합. 객체 생성 불가

implments : interface를 상속받을 때 사용하는 키워드. 여러 개의 interface 다중 상속 가능

final : 한 번 대입한 뒤 수정 불가. 상수가 됨 ( const와 유사 )

final method : 메서드 수정 불가능. 자식 클래스에서 오버라이딩 불가능.

final class : 상속할 수 없는 클래스

void : 반환값이 없음을 의미.

overloading : 같은 이름의 메서드를 매개변수의 개수나 타입을 다르게 정의하는 것.

private : 동일 클래스 내에서만 접근 가능

default / none : 동일 클래스 + 동일 패키지 내에서 접근 가능

protected : 동일 클래스 + 동일 패키지 + 하위(자식) 클래스 에서 접근 가능

public : 모든 클래스에서 접근 가능 
